baseURL: https://example.org/
languageCode: en-us
title: Robbie Shirts - Portfolio
theme: hugo-profile

outputs:
  home:
    - "HTML"
    - "RSS"
    - "JSON"
  page:
    - "HTML"
    - "RSS"

Paginate: 3
enableRobotsTXT: true
# disqusShortname: your-disqus-shortname
# googleAnalytics: G-MEASUREMENT_ID

markup:
  goldmark:
    renderer:
      unsafe: true

Menus:
    # - identifier: dropdown
    #   title: Example dropdown menu
    #   name: Dropdown
    #   weight: 3
    # - identifier: dropdown1
    #   title: example dropdown 1
    #   name: example 1
    #   url: /#
    #   parent: dropdown
    #   weight: 1
    # - identifier: dropdown2
    #   title: example dropdown 2
    #   name: example 2
    #   url: /#
    #   parent: dropdown
    #   weight: 2

params:
  title: "Robbie Shirts"
  description: Text about my cool site
  # staticPath: ""  # The path to serve the static files from
  favicon: "/images/icon.png"

  # Whether to serve bootstrap css and js files from CDN or not. Can be set to true, "css" or "js" to choose between
  # serving both, only the css, or only the js files through the CDN. Any other value will make so that CDN is not used.
  # Note the lack of "" in true, it should be of boolean type.
  useBootstrapCDN: false

  # If you want to load dynamically responsive images from Cloudinary
  # This requires your images to be uploaded + hosted on Cloudinary
  # Uncomment and change YOUR_CLOUD_NAME to the Cloud Name in your Cloudinary console
  # cloudinary_cloud_name: "YOUR_CLOUD_NAME"
  
  # Whether to add mathjax support on all pages. Alternatively, you can opt-in per page by adding `mathjax: true` in the frontmatter.
  mathjax: false

  # Whether the fade animations on the home page will be enabled
  animate: true

  theme:
    # disableThemeToggle: true
    # defaultTheme: "light" # dark

  font:
    fontSize: 1rem # default: 1rem
    fontWeight: 400 # default: 400
    lineHeight: 1.5 # default: 1.5
    textAlign: left # default: left

  # If you want to customize the menu, you can change it here
  navbar:
    align: ms-auto # Left: ms-auto | center: mx-auto | right: me-auto | Default: ms-auto
    
    # showBrandLogo: false # Show brand logo in nav bar | default is true
    brandName: "Robbie Shirts" # Brand name for the brand | default is the title variable
    disableSearch: true
    # searchPlaceholder: "Search"
    stickyNavBar:
      enable : true
    menus:
      disableAbout: false
      disableExperience: false
      disableEducation: false
      disableProjects: false
      disableAchievements: false
      disableContact: false

  # Hero
  hero:
    enable: true
    intro: "Hi, my name is"
    title: "Robbie Shirts."
    subtitle: "I am a passionate fullstack web developer"
    content: "A software engineering student with a passion for backend and fullstack development, and currently exploring devops."
    image: /images/me.jpg
    bottomImage:
      enable: true
    # roundImage: true # Make hero image circular | default false
    button:
      enable: true
      name: "Resume"
      url: "https://drive.google.com/file/d/17M8SM6mQZ6QO8rwYLmGdyfHlt24sWXMd/view?usp=sharing"
      download: true
      newPage: true
    socialLinks:
      fontAwesomeIcons:
        - icon: fab fa-github
          url: https://github.com/robertjshirts
        - icon: fab fa-linkedin
          url: https://linkedin.com/in/robertjshirts

  # About
  about:
    enable: true
    title: "About Me"
    image: "/images/me3.jpg"
    content: |-
      I'm a software engineering student with a passion for fullstack (but especially backend) development. I've also been exploring devops recently, trying to get into GitHub actions and CI/CD workflows. I'm currently in love with Golang, but I'm also very fond of Javascript. I'm always looking for new technologies to mess around with for a few weeks. 

      I'm currently working on a Healthcare app called [Healthmark](https://github.com/Paden-Little). It is a microservice architecture fullstack application that uses Golang, Vue.js, and MySQL, among other technologies. It's main function is to allow users to find a healthcare provider, and schedule an appointment. We planned to add full medical records, but the actual implementation is still in the works. The same is true for our chat functionality.
    skills:
      enable: true
      title: "Here are a few technologies I've been working with recently:"
      items:
        - "Golang (Gin)"
        - "Java (Spring Boot)"
        - "OpenAPI Spec"
        - "Consul"
        - "Traefik"
        - "Docker"
        - "JWT"
        - "MySQL (and other SQL databases)"

  # Experience
  experience:
    enable: true
    # title: "Custom Name"
    items:
      - job: "Non-Profit Advocate"
        company: "Farmers Consulting"
        companyUrl: "https://farmersconsulting.us/"
        date: "May 2024 - present"
        info:
          enable: true
          content: I am currently working as canvasser for Farmer's Consulting.
        content: |
          I am currently working as a canvasser for Farmer's Consulting, fundraising for The Nature Conservancy. I stand outside of different events and locations and try to get people to sign up for monthly donations to the organization. I work for Farmer's Consulting, but raise money for The Nature Conservancy. I'm glad to have worked here to improve my communication skills and to help the environment.

      - job: "Academic Coach"
        company: "Neumont College of Computer Science"
        companyUrl: "https://neumont.edu"
        date: "Jan 2024 - Present"
        info:
          enable: true
          content: I worked as an academic coach for 2 quarters at my college.
        content: |
          I worked as an academic coach for 2 quarters at Neumont College of Computer Science. I graded assignments, occasionally co-taught lectures, and helped students understand the material during tutoring sessions. I was an academic coach for the following courses:

            - Scalable Web Applications: Covered basic HTTP endpoints, authentication and authorization with Java Spring Boot and Spring Security.
            - Distributed Systems: Dockerized RESTful APIs and databases, including reverse proxies and a metrics dashboard.
            - Mathematics for Computer Science (Discrete Math): Covered modular math, combinatorics, and set theory.

      - job: "Field Tech"
        company: "Idaho Falls School District 91"
        companyUrl: "https://ifschools.org"
        date: "Jun 2022 - Sep 2022"
        info:
          enable: true
          content: I worked as a field tech for my school district the summer before I left for college.
        content: |
          I  worked as a field tech for Idaho Falls School District 91 for the summer. I was responsible for sensor installation, networking runs, and installed infrastructure for multiple district buildings.

  # Education
  education:
    enable: true
    # title: "Custom Name"
    index: false
    items:
      - title: "Bachelor of Science in Computer Science"
        school:
          name: "Neumont College of Computer Science"
          url: "https://neumont.edu"
        date: "2022 - 2025 (expected)"
        GPA: "3.8 out of 4.0 (current)"
        content: |-
          I was an academic coach for the following courses:
            - Scalable Web Applications (using Spring Boot)
            - Distributed Systems (Dockerizing applications)
            - Mathematics for Computer Science (Discrete Math, Linear Algebra, etc.)
        featuredLink:
          enable: true
          name: "My (unofficial) transcript"
          url: "https://drive.google.com/file/d/1LWFz83rVI-EbVnI75ma8aU4xKHaFpB7b/view?usp=sharing"
      - title: "High School"
        school:
          name: "Compass Academy"
          url: "https://www.ifschools.org/Compass"
        date: "2018 - 2022"
        GPA: "3.7 out of 4.0"
        content: |-
          I graduated with 3 honor cords:
            - Cum Laude: 3.6+ GPA
            - National Honor Society
            - Something else I literally cannot remember for the life of me

  # Achievements
  achievements:
    enable: true
    title: Skills
    items:
      - title: "Golang"
        content: "I have been working Go for 6 or 7 months now, and I've fallen in love with it. Anytime I can use Go, I do. Especially on backend APIs and microservices."
      - title: "Java"
        content: "I've worked with Java for about 2 years now, and I'm very comfortable with it."
      - title: "Docker"
        content: "I've been using Docker for about 6 months now, and I'm skilled in creating and managing containers, images, and networks."
      - title: "HTML/CSS"
        content: "I've worked with plain HTML and CSS for more than 3 years, and I'm very comfortable with them."
      - title: "Javascript"
        content: "Both in the browser, and with Node.js, I've been working with Javascript for about a year and a half. I'm very skilled in it."
      - title: "OpenAPI Spec"
        content: "Formerly known as Swagger, I've been working with this specification for describing APIs for 6 months, and I belive definition driven APIs are the future."
      - title: "Git"
        content: "I've been using Git for about a year and a half now, and I'm very comfortable with it. I've used it in both personal and group projects."
      - title: "SQL"
        content: "I've been working with SQL for around a year, and I'm very comfortable with it. I've used MySQL, MSSQL (or Microsoft SQL Server), and PostgreSQL."
      - title: "MongoDB"
        content: "I've been working with Mongo for the better part of a year, and I love it anywhere I don't need relationships. It's great for quick prototyping and small projects."

  projects:
    enable: true
    # title: "Custom Name"
    items:
      - title: Puzzles
        content: Puzzles is a distributed, simple e-commerce backend written in golang designed to demonstrate the use of microservices and a service-oriented architecture. Image is AI generated, as there is no frontend for this project.
        image: /images/puzzles.jpg
        badges:
          - "Golang Gin"
          - "Consul"
          - "Traefik"
          - "Docker"
          - "RabbitMQ"
        links:
          - icon: fab fa-github
            url: https://github.com/robertjshirts/puzzles

      - title: OLiM
        content: An anonymous chat application built with Node.js, Express, and Socket.io. It was the first group project I ever worked on, and it was a blast. We had a lot of fun with this one, and I learned a lot about websockets and backend development in general.
        image: /images/OLiM.png
        badges:
          - "Node.js"
          - "Express"
          - "Socket.io"
          - "MongoDB"
        links:
          - icon: fab fa-github
            url: https://github.com/robertjshirts/OLiM

      - title: HealthMark
        content: A microservice architecture fullstack application that uses Golang, Vue.js, and MySQL, among other technologies. It's main function is to allow users to find a healthcare provider, and schedule an appointment. We planned to add full medical records, but the actual implementation is still in the works. The same is true for our chat functionality.
        image: /images/healthmark.png
        badges:
          - "Golang"
          - "Docker"
          - "Vue.js"
          - "Traefik"
          - "Consul"
          - "JWT"
          - "RabbitMQ"
          - "MySQL"
        links:
          - icon: fab fa-github
            url: https://github.com/gurusabarish/HugoProfileV2

  #Contact
  contact:
    enable: true
    # title: "Custom Name"
    content: My inbox is always open. Whether you have a question or just want to say hi, I’ll try my best to get back to you!
    btnName: Mail me
    btnLink: mailto:robertjshirts@gmail.com
    # formspree:
    #   enable: true # `contact.email` value will be ignored
    #   formId: abcdefgh # Take it from your form's endpoint, like 'https://formspree.io/f/abcdefgh'
    #   emailCaption: "Enter your email address"
    #   messageCaption: "Enter your message here"

  footer:
    socialNetworks:
      github: https://github.com/robertjshirts
      linkedin: https://linkedin.com/in/robertjshirts

  # List pages like blogs and posts
  listPages:
    disableFeaturedImage: false

  # Single pages like blog and post
  singlePages:
    readTime:
      enable: true
      content: "min read"
    scrollprogress:
      enable: true

  # For translations
  terms:
    read: "Read"
    toc: "Table Of Contents"
    copyright: "All rights reserved"
    pageNotFound: "Page not found"
    emailText: "Check out this site"

  datesFormat:
    article: "Jan 2, 2006"
    articleList: "Jan 2, 2006"
    articleRecent: "Jan 2, 2006"

  #customScripts: -| # You can add custom scripts which will be added before </body> tag
  #  <script type="text/javascript"><!-- any script here --></script>
